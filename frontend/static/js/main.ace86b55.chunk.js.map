{"version":3,"sources":["static/aws_logo.png","static/flow_diagram.png","common/labels.js","components/commons/common-components.jsx","resources/data-provider.jsx","components/task-detail.jsx","components/task-create.jsx","components/task-report.js","components/task-images.js","components/task-list.js","components/get-started.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","appLayoutLabels","navigation","navigationToggle","navigationClose","notifications","tools","toolsToggle","toolsClose","navHeader","text","href","navItems","type","items","defaultOnFollowHandler","ev","preventDefault","Navigation","_ref4","activeHref","_ref4$header","header","_ref4$items","_ref4$onFollowHandler","onFollowHandler","react_default","a","createElement","side_navigation","onFollow","forwardRef","props","ref","app_layout","Object","assign","headerSelector","ariaLabels","onNavigationChange","event","onToolsChange","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ModerationCategories","-- All --","Explicit Nudity","Suggestive","Violence","Visually Disturbing","Rude Gestures","Drugs","Tobacco","Alcohol","Gambling","Hate Symbols","TypeFilterValue","id","FetchData","_x","_FetchData","apply","arguments","asyncToGenerator","_callee","path","body","apiName","init","_args","_context","t0","Auth","currentSession","t1","getIdToken","getJwtToken","t2","concat","t3","Authorization","headers","t4","API","get","post","put","task_detail_regeneratorRuntime","TaskDetail","_ref","selectedTask","onImageClick","onReportClick","onBack","_useState","useState","_useState2","slicedToArray","moderationSubmittedFlag","setModerationSubmittedFlag","_useState3","_useState4","task","setTask","_useState5","_useState6","loadingStatus","setLoadingStatus","_useState7","_useState8","showSummary","setShowSummary","_useState9","_useState10","expandSummary","setExpandSummary","_useState11","_useState12","showModeration","setShowModeration","_useState13","_useState14","expandModeration","setExpandModeration","_useState15","_useState16","showHumanReview","setShowHumanReview","_useState17","_useState18","expandHumanReview","setExpandHumanReview","_useState19","_useState20","actions","setActions","_useState21","_useState22","showModerateModal","setShowModerateModal","_useState23","_useState24","setPanelStatus","t","status","total_files","handleStartModerationClick","e","handleCloseModerationModal","handleConfirmStartModerationClick","data","j","JSON","parse","reloadTask","console","log","message","_reloadTask","useEffect","Summary","column_layout","columns","variant","box","description","s3_bucket","s3_key_prefix","parseInt","toLocaleString","created_by","created_ts","ModerationSummary","processed","labeled","HumanReviewSummary","reviewed","false_positive","true_positive","Action","includes","margin","float","components_button","onClick","disabled","modal","onDismiss","visible","footer","space_between","direction","size","components_alert","className","right","display","popover","position","triggerType","dismissButton","content","status_indicator","iconName","navigator","clipboard","writeText","components_link","isExternal","externalIconAriaLabel","a2i_job_title","external","a2i_url","flashbar","progress_bar","label","components_header","spinner","expandable_section","defaultExpanded","headerText","headerDescription","TaskCreate","user","onSubmit","username","userName","taskName","setTaskName","taskDescription","settaskDescription","setMessage","submitFlag","setSubmitFlag","submitSuccessFlag","setSubmitSuccessFlag","handleSubmit","task_name","task_description","resp","closeAriaLabel","formAction","statusIconAriaLabel","form_field","input","onChange","detail","ariaRequired","invalid","trim","components_textarea","TaskReport","report","setReport","topCategoryFilter","setTopCategoryFilter","subCategoryFilter","setSubCategoryFilter","typeFilter","setTypeFilter","confidenceThreshold","setConfidenceThreshold","subCategories","setSubCategories","reportUrl","setReportUrl","top_category","sub_category","confidence_threshold","handleTopCategoryItemClick","sub","map","x","handleSubCategoryItemClick","handleTypeItemClick","handleConfidenceItemClick","target","handleReset","handleExport","Filter","download","container","button_dropdown","onItemClick","expandableGroups","find","Slider","style","width","defaultValue","min","max","step","marks","aria-label","valueLabelDisplay","valueLabelFormat","Metrics","toFixed","fp","tp","TypePie","by_type","pie_chart","hideFilter","hideLegend","detailPopoverContent","datum","sum","segmentDescription","i18nStrings","detailsValue","detailsPercentage","filterLabel","filterPlaceholder","filterSelectedAriaLabel","detailPopoverDismissAriaLabel","legendAriaLabel","chartAriaRoleDescription","segmentAriaRoleDescription","ariaDescription","ariaLabel","errorText","loadingText","recoveryText","empty","textAlign","color","ByTopCategoryPie","by_top_category","BySubCategoryByTypeBar","by_sub_category_type","bar_chart","detailPopoverSize","series","title","y","valueFormatter","xDomain","by_sub_category","yDomain","Math","toConsumableArray","xTickFormatter","height","xScaleType","xTitle","yTitle","noMatch","ByTopCategoryByTypeBar","by_top_category_type","ByConfidenceByTypeBar","by_confidence_type","stackedBars","PAGE_SIZE","TaskImages","images","setImages","filteredImages","setFilteredImages","_React$useState","React","_React$useState2","currentPageIndex","setCurrentPageIndex","currentImages","setCurrentImages","showUnflag","setShowUnflag","showUnflagToggle","setShowUnflagToggle","_useState25","_useState26","filterText","setFilterText","getCurrentPageImages","curPage","index","reloadImages","unflag","filterImagesByText","queryParams","URLSearchParams","window","location","search","handlePaginationChange","all_images","file_path","toLowerCase","toggle","_ref2","checked","cards","cardDefinition","item","fontSize","sections","url","split","at","parseFloat","confidence","badge","src","cardsPerRow","minWidth","filter","text_filter","filteringPlaceholder","filteringText","padding","bottom","pagination","pagesCount","ceil","nextPageLabel","previousPageLabel","pageLabel","pageNumber","task_list_regeneratorRuntime","TaskList","onSelectionChange","getCurrentPageItems","setItems","pageItems","setPageItems","isDescending","setIsDescending","selectedItems","setSelectedItems","showCreate","setShowCreate","showDelete","setShowDelete","showDetail","setShowDetail","showReport","setShowReport","showImages","setShowImages","handleViewDetail","handleDeleteSubmit","_handleDeleteSubmit","si","statusCode","handleDeleteDismiss","handleTaskCreate","handleBackToList","handleReport","handleImages","react","table","loading","onSortingChange","is","sortingField","sortingColumn","b","sort","selectionGroupLabel","allItemsSelectionLabel","_ref3","itemSelectionLabel","isItemSelected","columnDefinitions","cell","selectionType","trackBy","GetStarted","onStart","messages","content_layout","diagram","alt","withAuthenticator","signOut","currentPage","setCurrentPage","navigationOpen","setNavigationOpen","activeNavHref","setActiveNavHref","currentBreadcrumb","setCurrentBreadcrumb","appLayout","useRef","top_navigation","identity","logo","utilities","email","searchIconAriaLabel","searchDismissIconAriaLabel","overflowMenuTriggerText","overflowMenuTitleText","overflowMenuBackIconAriaLabel","overflowMenuDismissIconAriaLabel","contentType","breadcrumbs","breadcrumb_group","alert","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","identityPoolId","region","userPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ace86b55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aws_logo.9d944151.png\";","module.exports = __webpack_public_path__ + \"static/media/flow_diagram.7b6ae0c5.png\";","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\nexport const appLayoutLabels = {\n  navigation: 'Side navigation',\n  navigationToggle: 'Open side navigation',\n  navigationClose: 'Close side navigation',\n  notifications: 'Notifications',\n  tools: 'Help panel',\n  toolsToggle: 'Open help panel',\n  toolsClose: 'Close help panel',\n};\n\nexport const paginationLabels = {\n  nextPageLabel: 'Next page',\n  previousPageLabel: 'Previous page',\n  pageLabel: pageNumber => `Page ${pageNumber} of all pages`,\n};\n\nexport const externalLinkProps = {\n  external: true,\n  externalIconAriaLabel: 'Opens in a new tab',\n};\n\nexport const distributionSelectionLabels = {\n  itemSelectionLabel: (data, row) => `select ${row.id}`,\n  allItemsSelectionLabel: () => 'select all',\n  selectionGroupLabel: 'Distribution selection',\n};\n\nexport const originsSelectionLabels = {\n  itemSelectionLabel: (data, row) => `select ${row.name}`,\n  allItemsSelectionLabel: () => 'select all',\n  selectionGroupLabel: 'Origins selection',\n};\n\nexport const behaviorsSelectionLabels = {\n  itemSelectionLabel: (data, row) => `select path ${row.pathPattern} from origin ${row.origin}`,\n  allItemsSelectionLabel: () => 'select all',\n  selectionGroupLabel: 'Behaviors selection',\n};\n\nexport const logsSelectionLabels = {\n  itemSelectionLabel: (data, row) => `select ${row.name}`,\n  allItemsSelectionLabel: () => 'select all',\n  selectionGroupLabel: 'Logs selection',\n};\n\nconst headerLabel = (title, sorted, descending) => {\n  return `${title}, ${sorted ? `sorted ${descending ? 'descending' : 'ascending'}` : 'not sorted'}.`;\n};\n\nexport const addColumnSortLabels = columns =>\n  columns.map(col => ({\n    ariaLabel:\n      col.sortingField || col.sortingComparator\n        ? sortState => headerLabel(col.header, sortState.sorted, sortState.descending)\n        : undefined,\n    ...col,\n  }));\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\nimport React, { forwardRef } from 'react';\nimport {\n  AppLayout,\n  Badge,\n  Box,\n  Button,\n  Flashbar,\n  Header,\n  Link,\n  SideNavigation,\n  SpaceBetween,\n} from '@cloudscape-design/components';\nimport { appLayoutLabels, externalLinkProps } from '../../common/labels';\nimport { getHeaderCounterText, getServerHeaderCounterText } from '../../common/tableCounterStrings';\nimport { useNotifications } from './use-notifications';\n\nexport const navHeader = { text: 'Rekognition Accuracy Evaluation', href: '#/' };\nexport const navItems = [\n  {\n    type: 'section',\n    text: 'Reports and analytics',\n    items: [\n      { type: 'link', text: 'Distributions', href: '#/distributions' },\n      { type: 'link', text: 'Cache statistics', href: '#/cache' },\n      { type: 'link', text: 'Monitoring and alarms', href: '#/monitoring' },\n      { type: 'link', text: 'Popular objects', href: '#/popular' },\n      { type: 'link', text: 'Top referrers', href: '#/referrers' },\n      { type: 'link', text: 'Usage', href: '#/usage' },\n      { type: 'link', text: 'Viewers', href: '#/viewers' },\n    ],\n  },\n  {\n    type: 'section',\n    text: 'Private content',\n    items: [\n      { type: 'link', text: 'How-to guide', href: '#/howto' },\n      { type: 'link', text: 'Origin access identity', href: '#/origin' },\n    ],\n  },\n];\n\nexport const ec2NavItems = [\n  { type: 'link', text: 'Dashboard', href: 'dashboard' },\n  { type: 'link', text: 'Evaluation tasks', href: 'tasks' },\n  { type: 'divider' },\n  {\n    type: 'link',\n    text: 'Documentation',\n    external: true,\n    href: '#/documentation',\n  },\n];\n\nexport const InfoLink = ({ id, onFollow, ariaLabel }) => (\n  <Link variant=\"info\" id={id} onFollow={onFollow} ariaLabel={ariaLabel}>\n    Info\n  </Link>\n);\n\n// a special case of external link, to be used within a link group, where all of them are external\n// and we do not repeat the icon\nexport const ExternalLinkItem = ({ href, text }) => (\n  <Link href={href} ariaLabel={`${text} ${externalLinkProps.externalIconAriaLabel}`} target=\"_blank\">\n    {text}\n  </Link>\n);\n\nexport const TableNoMatchState = props => (\n  <Box margin={{ vertical: 'xs' }} textAlign=\"center\" color=\"inherit\">\n    <SpaceBetween size=\"xxs\">\n      <div>\n        <b>No matches</b>\n        <Box variant=\"p\" color=\"inherit\">\n          We can't find a match.\n        </Box>\n      </div>\n      <Button onClick={props.onClearFilter}>Clear filter</Button>\n    </SpaceBetween>\n  </Box>\n);\n\nexport const TableEmptyState = ({ resourceName }) => (\n  <Box margin={{ vertical: 'xs' }} textAlign=\"center\" color=\"inherit\">\n    <SpaceBetween size=\"xxs\">\n      <div>\n        <b>No {resourceName.toLowerCase()}s</b>\n        <Box variant=\"p\" color=\"inherit\">\n          No {resourceName.toLowerCase()}s associated with this resource.\n        </Box>\n      </div>\n      <Button>Create {resourceName.toLowerCase()}</Button>\n    </SpaceBetween>\n  </Box>\n);\n\nfunction getCounter(props) {\n  if (props.counter) {\n    return props.counter;\n  }\n  if (!props.totalItems) {\n    return null;\n  }\n  if (props.serverSide) {\n    return getServerHeaderCounterText(props.totalItems, props.selectedItems);\n  }\n  return getHeaderCounterText(props.totalItems, props.selectedItems);\n}\n\nexport const TableHeader = props => {\n  return (\n    <Header\n      variant={props.variant}\n      counter={getCounter(props)}\n      info={\n        props.loadHelpPanelContent && <InfoLink onFollow={props.loadHelpPanelContent} ariaLabel={`Information about ${props.title}.`} />\n      }\n      description={props.description}\n      actions={props.actionButtons}\n    >\n      {props.title}\n    </Header>\n  );\n};\n\nconst defaultOnFollowHandler = ev => {\n  // keep the locked href for our demo pages\n  ev.preventDefault();\n};\n\nexport function Navigation({\n  activeHref,\n  header = navHeader,\n  items = navItems,\n  onFollowHandler = defaultOnFollowHandler,\n}) {\n  return <SideNavigation items={items} header={header} activeHref={activeHref} onFollow={onFollowHandler} />;\n}\n\nexport function Notifications({ successNotification }) {\n  const notifications = useNotifications(successNotification);\n  return <Flashbar items={notifications} />;\n}\n\nexport const CustomAppLayout = forwardRef((props, ref) => {\n  return (\n    <AppLayout\n      ref={ref}\n      {...props}\n      headerSelector=\"#header\"\n      ariaLabels={appLayoutLabels}\n      onNavigationChange={event => {\n        if (props.onNavigationChange) {\n          props.onNavigationChange(event);\n        }\n      }}\n      onToolsChange={event => {\n        if (props.onToolsChange) {\n          props.onToolsChange(event);\n        }\n      }}\n    />\n  );\n})\n\nexport const CounterLink = ({ children }) => {\n  return (\n    <Link variant=\"awsui-value-large\" href=\"#\">\n      {children}\n    </Link>\n  );\n};\n","import { Auth, API } from 'aws-amplify';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\nconst ACCURACY_EVAL_SERVICE_URL = process.env.REACT_APP_ACCURACY_EVAL_SERVICE_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\n/*\nexport default class DataProvider {\n  getData(name) {\n    return fetch(`../resources/${name}.json`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Response error: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => data.map(it => ({ ...it, date: new Date(it.date) })));\n  }\n}*/\n\nconst ModerationCategories = {\n  \"-- All --\": [],\n  \"Explicit Nudity\": [\"-- All --\", \"Nudity\", \"Graphic Male Nudity\", \"Graphic Female Nudity\", \"Sexual Activity\", \"Illustrated Explicit Nudity\", \"Adult Toys\"],\n  \"Suggestive\": [\"-- All --\", \"Female Swimwear Or Underwear\",\"Male Swimwear Or Underwear\",\"Partial Nudity\",\"Barechested Male\",\"Revealing Clothes\",\"Sexual Situations\"],\n  \"Violence\": [\"-- All --\" ,\"Graphic Violence Or Gore\", \"Physical Violence\", \"Weapon Violence\", \"Weapons\", \"Self Injury\"],\n  \"Visually Disturbing\": [\"-- All --\", \"Emaciated Bodies\",\"Corpses\",\"Hanging\",\"Air Crash\",\"Explosions And Blasts\"],\n  \"Rude Gestures\": [\"-- All --\", \"Middle Finger\"],\n  \"Drugs\": [\"-- All --\", \"Drug Products\", \"Drug Use\", \"Pills\", \"Drug Paraphernalia\"],\n  \"Tobacco\": [\"-- All --\", \"Tobacco Products\", \"Smoking\"],\n  \"Alcohol\": [\"-- All --\", \"Drinking\", \"Alcoholic Beverages\"],\n  \"Gambling\": [\"-- All --\", \"Gambling\"],\n  \"Hate Symbols\": [\"-- All --\", \"Nazi Party\", \"White Supremacy\", \"Extremist\"]\n}\nconst TypeFilterValue = [\n       { id: \"-\", text: \"-- All --\" },\n       { id: \"true-positive\", text: \"True Positive\" },\n       { id: \"false-positive\", text: \"False Positive\" },\n     ]\nconst ConfidenceValue = [\n       { id: \"50\", text: \"50%\" },\n       { id: \"60\", text: \"60%\" },\n       { id: \"70\", text: \"70%\" },\n       { id: \"80\", text: \"80%\" },\n       { id: \"90\", text: \"90%\" },\n     ]\n\nasync function FetchData(path, method=\"post\", body=null) {\n  const apiName = 'CmAccuracyEvalSrv';\n  const init = {\n    headers: {\n      Authorization: `Bearer ${(await Auth.currentSession())\n        .getIdToken()\n        .getJwtToken()}`\n    }\n  };\n\n  if (body !== null) {\n    init[\"body\"] = body;\n  }\n\n  switch(method) {\n    case \"get\":\n      return await API.get(apiName, path, init);\n    case \"post\":\n      return await API.post(apiName, path, init);\n    case \"put\":\n      return await API.put(apiName, path, init);\n  }\n  return null;\n}\n\nexport {ModerationCategories, TypeFilterValue, ConfidenceValue, FetchData};","import React, { useState, useEffect } from 'react';\nimport { Box, Button, ColumnLayout,Header,SpaceBetween,StatusIndicator,Link,Popover,Modal,Alert,ProgressBar,ExpandableSection,Flashbar,Spinner} from '@cloudscape-design/components';\nimport { FetchData } from \"../resources/data-provider\";\n\nconst ACCURACY_EVAL_SERVICE_URL = process.env.REACT_APP_ACCURACY_EVAL_SERVICE_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst REFRESH_INTERVAL_MS = 5000;\n\nfunction TaskDetail ({selectedTask, onImageClick, onReportClick,  onBack}) {\n\n  const [moderationSubmittedFlag, setModerationSubmittedFlag ] = useState(false);\n  const [task, setTask] = useState(selectedTask)\n  const [loadingStatus, setLoadingStatus] = useState(null) // null, LOADING, LOADED\n\n  const [showSummary, setShowSummary] = useState(true);\n  const [expandSummary, setExpandSummary] = useState(false);\n  const [showModeration, setShowModeration] = useState(false);\n  const [expandModeration, setExpandModeration] = useState(false);\n  const [showHumanReview, setShowHumanReview] = useState(false);\n  const [expandHumanReview, setExpandHumanReview] = useState(false);\n  const [actions, setActions] = useState([]);\n  const [showModerateModal, setShowModerateModal]= useState(false);\n\n  const [lastRefresh, setLastRefresh] = useState(null);\n\n  // Status values: [\"CREATED\", \"MODERATING\", \"MODERATION_COMPLETED\", \"HUMAN_REVIEWING\", \"COMPLETED\", \"FAILED\"]\n  // Action values: [\"TO_S3\", \"START_MOD\", \"MOD_PROGRESS\", \"GO_TO_A2I\", \"REVIEW_PROGRESS\", \"CHECK_REPORT\", \"REVIEW_IMAGES\"]\n  function setPanelStatus(t) {\n    if(t !== null && t.status !== null) {\n      // Summary section\n      switch(t.status) {\n        case \"CREATED\":\n          setShowSummary(true);\n          setExpandSummary(true);\n          setShowModeration(false);\n          setExpandModeration(false);\n          setShowHumanReview(false);\n          setExpandHumanReview(false);\n          if (t.total_files === null || t.total_files == 0)\n            setActions([\"TO_S3\"]);\n          else\n            setActions([\"START_MOD\"]);\n          break;\n        case \"MODERATING\":\n          setShowSummary(true);\n          setExpandSummary(false);\n          setShowModeration(true);\n          setShowHumanReview(false);\n          setExpandModeration(true);\n          setExpandHumanReview(false);\n          setActions([\"MOD_PROGRESS\"]);\n          break;      \n        case \"MODERATION_COMPLETED\":\n          setShowSummary(true);\n          setExpandSummary(false);\n          setShowModeration(true);\n          setExpandModeration(false);\n          setShowHumanReview(true);\n          setExpandHumanReview(true);\n          setActions([\"GO_TO_A2I\",\"REVIEW_IMAGES\"]);\n          break;    \n        case \"HUMAN_REVIEWING\":\n          setShowSummary(true);\n          setExpandSummary(false);\n          setShowModeration(true);\n          setShowHumanReview(true);\n          setExpandModeration(false);\n          setExpandHumanReview(true);\n          setActions([\"GO_TO_A2I\",\"CHECK_REPORT\",\"REVIEW_PROGRESS\",\"REVIEW_IMAGES\"]);\n          break;    \n        case \"COMPLETED\":\n          setShowSummary(true);\n          setExpandSummary(true);\n          setShowModeration(true);\n          setShowHumanReview(true);\n          setExpandModeration(true);\n          setExpandHumanReview(true);\n          setActions([\"CHECK_REPORT\",\"REVIEW_IMAGES\"]);\n          break;      \n        }\n    }\n  }\n\n  const handleStartModerationClick = e => {\n    setShowModerateModal(true);\n  }\n\n  const handleCloseModerationModal = e => {\n    setShowModerateModal(false);\n  }\n  const handleConfirmStartModerationClick = e => {\n    setShowModerateModal(false);\n    if (!moderationSubmittedFlag)\n    {\n      setModerationSubmittedFlag(true);\n      FetchData('/task/start-moderation', \"post\", {\n        id: task.id\n      }).then((data) => {\n            var j = JSON.parse(data.body)\n            setTask(j);\n            reloadTask();\n        })\n        .catch((err) => {\n          setModerationSubmittedFlag(false);\n          console.log(err.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    if (loadingStatus === null) {\n     reloadTask();\n    }\n  });\n\n  async function reloadTask() {\n    //console.log(task);\n    setLoadingStatus(\"LOADING\");\n    setModerationSubmittedFlag(false);\n\n    FetchData('/task/task-with-count',\"post\", {\n      id: task.id\n    }).then((data) => {\n          var j = JSON.parse(data.body)\n          setTask(j);\n          setPanelStatus(j);\n          setLoadingStatus(\"LOADED\");\n      })\n      .catch((err) => {\n        console.log(err.message);\n        setLoadingStatus(\"LOADED\");\n      });\n    return;\n  }\n\n  const handleRefresh = e => {\n    reloadTask();\n  }\n\n  const handleReportClick = e => {\n    e.task = task;\n    onReportClick(e);\n  }\n  const handleImagesClick = e => {\n    e.task = task;\n    onImageClick(e);\n  }\n  const Summary = () => (\n    <div>\n    <ColumnLayout columns={4} variant=\"text-grid\">\n        <div>\n          <Box variant=\"awsui-key-label\">Description</Box>\n          <div>{task!==null?task.description:\"\"}</div>\n        </div>     \n        <div>\n          <Box variant=\"awsui-key-label\">S3 URI</Box>\n          <div>{task!==null && task.s3_bucket !== null ?`s3://${task.s3_bucket}/${task.s3_key_prefix}`:\"\"}</div>\n        </div>  \n        <div>\n          <Box variant=\"awsui-key-label\">Numbers of images uploaded</Box>\n          <div>{task!==null && task.total_files !== null && parseInt(task.total_files) > 0?parseInt(task.total_files).toLocaleString('en-US'): 0}</div>\n        </div>          \n        <div>\n          <Box variant=\"awsui-key-label\">Created</Box>\n          <div>{task!==null?task.created_by:\"\"}</div>\n          <div>{task!==null?task.created_ts:\"\"}</div>\n        </div>   \n    </ColumnLayout>\n    </div>\n  );\n\n  const ModerationSummary = () => (\n    <div>\n    <ColumnLayout columns={3} variant=\"text-grid\">\n        <div>\n          <Box variant=\"awsui-key-label\">Total uploaded images</Box>\n          <Box variant=\"awsui-value-large\">{task!==null && task.total_files !== null?parseInt(task.total_files).toLocaleString('en-US'):\"\"}</Box>\n        </div>\n        <div>\n          <Box variant=\"awsui-key-label\">Total number of images processed by Rekognition</Box>\n          <Box variant=\"awsui-value-large\">{task!==null && task[\"processed\"] !== undefined?task.processed.toLocaleString('en-US'):\"\"}</Box>\n        </div>\n        <div>\n          <Box variant=\"awsui-key-label\">Total number of images flagged by Rekognition as inappropriate</Box>\n          <Box variant=\"awsui-value-large\">{task!==null && task[\"labeled\"] !== undefined?task.labeled.toLocaleString('en-US'):\"\"}</Box>\n        </div>  \n      </ColumnLayout>\n    </div>\n  );\n\n  const HumanReviewSummary = () => (\n    <div>\n    <ColumnLayout columns={4} variant=\"text-grid\">\n        <div>\n          <Box variant=\"awsui-key-label\">Total number of images flagged by Rekognition as inappropriate</Box>\n          <Box variant=\"awsui-value-large\">{task!==null && task[\"labeled\"] !== undefined?task.labeled.toLocaleString('en-US'):\"\"}</Box>\n        </div>  \n        <div>\n          <Box variant=\"awsui-key-label\">Images reviewed by huamn</Box>\n          <Box variant=\"awsui-value-large\">{task!==null && task[\"reviewed\"] !== undefined?task.reviewed.toLocaleString('en-US'):\"\"}</Box>\n        </div>  \n        <div>\n          <Box variant=\"awsui-key-label\">Numbers of False Positive</Box>\n          <Box variant=\"awsui-value-large\">{task!==null && task[\"false_positive\"] !== undefined?task.false_positive.toLocaleString('en-US'):\"\"}</Box>\n        </div>\n        <div>\n          <Box variant=\"awsui-key-label\">Numbers of True Positive</Box>\n          <Box variant=\"awsui-value-large\">{task!==null && task[\"true_positive\"] !== undefined?task.true_positive.toLocaleString('en-US'):\"\"}</Box>\n        </div>\n      </ColumnLayout>\n    </div>\n  );\n\n  const Action = () => (\n    <div>\n    {actions.includes(\"START_MOD\")?\n    <Box margin={'l'} float='right'>\n      <Button variant=\"primary\" onClick={handleStartModerationClick} disabled={moderationSubmittedFlag}>Start moderation</Button>\n      <Modal \n        onDismiss={handleCloseModerationModal} \n        visible={showModerateModal}\n        footer={\n          <Box float=\"right\">\n            <SpaceBetween direction=\"horizontal\" size=\"xs\">\n              <Button variant=\"link\" onClick={handleCloseModerationModal}>Cancel</Button>\n              <Button variant=\"primary\" onClick={handleConfirmStartModerationClick}>Confirm start moderation</Button>\n            </SpaceBetween>\n          </Box>\n        }\n        header=\"Start moderating images\">\n        Amazon Rekognition will moderate the <b>{task.total_files}</b> images in the S3 bucket: <b>s3://{task.s3_bucket}/{task.s3_key_prefix}</b> <br/>Do not add new images to the folder after the moderation process starts.\n      </Modal>\n    </Box>:<div/>}\n\n    {actions.includes(\"TO_S3\")?\n      <Alert>\n          <b>You have initiated an accuracy evaluation task successfully!</b>\n          <br/>As for the next step, you will need to copy the images to the S3 bucket folder: <b>s3://{task.s3_bucket}/{task.s3_key_prefix}</b> provisioned for this task. Then come back to continue the process. \n          <br/>We recommend providing more than 5,000 images for better accuracy evaluation. Fewer images will provide less data points and potentially produce a skewed result.\n          <br/>If your sample images are already in an S3 bucket, use the below bash command to bulk copy images from the source S3 bucket to the one set up for this evaluation task. (Ensure your IAM user/role has proper access to both buckets.)\n          <br/><br/>\n          <span className=\"custom-wrapping\">\n            <Box margin={{ right: 'xxs' }} display=\"inline-block\">\n              <Popover\n                size=\"small\"\n                position=\"top\"\n                triggerType=\"custom\"\n                dismissButton={false}\n                content={<StatusIndicator type=\"success\">Command copied</StatusIndicator>}\n              >\n                <Button\n                  variant=\"inline-icon\"\n                  iconName=\"copy\"\n                  onClick={() => {\n                    /* copy to clipboard implementation */\n                    navigator.clipboard.writeText(`aws s3 sync s3://YOUR_SOURCE_S3_BUCKET/YOUR_FOLDER/ s3://${task.s3_bucket}/${task.s3_key_prefix}`);\n                  }}\n                />\n              </Popover>\n            </Box>\n            <b>aws s3 sync s3://YOUR_SOURCE_S3_BUCKET/YOUR_FOLDER/ s3://{task.s3_bucket}/{task.s3_key_prefix}</b>\n            <br/><br/>\n            <Link \n              isExternal={true} \n              externalIconAriaLabel=\"Opens in a new tab\" \n              href='https://docs.aws.amazon.com/cloudshell/latest/userguide/multiple-files-upload-download.html'>\n                 Refer to the document for more instructions if your images are outside S3.\n            </Link>\n          </span>  \n          </Alert> \n    :<div/>\n    } \n\n    {actions.includes(\"GO_TO_A2I\")?\n    <Alert>\n        Rekognition moderated all the images in the S3 bucket folder. Now, you can log in to the Augmented AI (A2I) portal to review the moderation result. \n        Choose job <b>{task.a2i_job_title}</b> from the list and click \"Start working\" to review the moderation results.\n        <br/><br/><Link variant=\"primary\" external='true' href={task.a2i_url !== null?task.a2i_url:\"\"}>Open A2I human review portal</Link>\n    </Alert>: <div/>\n    }   \n\n    {actions.includes(\"MOD_PROGRESS\")?\n      <Flashbar\n      items={[\n        {\n          content: (\n          <ProgressBar\n            variant=\"flash\"\n            value={(task.processed * 100)/task.total_files}\n            label=\"Rekognition image moderation progress. Model will flag everything above 50%. You can change that confidence score later on the results page.\"\n          />\n      )}]}>\n\n      </Flashbar>\n    :<div/>}\n\n    {actions.includes(\"REVIEW_PROGRESS\")?\n      <div>\n      <br/>\n      <Flashbar\n      items={[\n        {\n          content: (\n          <ProgressBar\n            variant=\"flash\"\n            value={(task.reviewed * 100)/task.labeled}\n            label=\"Huamn review (using A2I) progress\"\n          />\n      )}]}>\n      </Flashbar>\n      </div>\n    :<div/>}\n    </div>)\n\n    return (\n      <div>\n        <Header\n          actions={\n            <Box float=\"right\">\n            <SpaceBetween direction=\"horizontal\" size=\"xs\">\n              {loadingStatus === \"LOADING\"?<Spinner />:\n                task.status !== 'COMPLETED'?\n                <div>Refresh to update task status - <Button variant=\"normal\" iconName=\"refresh\" onClick={handleRefresh} /></div>:<div/>}\n              {actions.includes(\"CHECK_REPORT\")?\n              <Button variant='primary' onClick={handleReportClick}>Review report</Button>:<div/>}\n              {actions.includes(\"REVIEW_IMAGES\")?\n              <Button variant='primary' onClick={handleImagesClick}>Check images</Button>:<div/>}\n              \n              <Button variant=\"normal\" onClick={onBack}>\n                Back to list\n              </Button>\n            </SpaceBetween>\n          </Box>\n          }\n        >Rekognition image accuracy evalution task</Header>\n        <br/>\n        {showSummary?\n        <ExpandableSection \n          defaultExpanded={expandSummary} \n          variant=\"container\" \n          headerText={task.name}\n          headerDescription={<StatusIndicator type={task.status === 'COMPLETED' ? 'success' : task.status === 'FAILED'? 'error': 'info' }>{task.status}</StatusIndicator>}\n          >\n            <Summary />\n        </ExpandableSection>:<div/>}\n        <br/>\n        {showModeration ?\n        <ExpandableSection \n          defaultExpanded={expandModeration} \n          variant=\"container\" \n          headerText=\"Moderation summary\"\n          headerDescription={task.labeled + ' / ' + task.total_files + ' images flagged by Rekognition image moderation API'}>\n            <ModerationSummary />\n        </ExpandableSection>:<div/>}\n        <br/>\n        {showHumanReview ?\n        <ExpandableSection \n          defaultExpanded={expandHumanReview} \n          variant=\"container\" \n          headerText=\"Human review summary\" >\n            <HumanReviewSummary />\n        </ExpandableSection>:<div/>}\n        <br />\n        {actions.length > 0? \n        <Action></Action>\n        :<div/>}\n      </div>\n    );\n}\n\nexport {TaskDetail};","import React, { useState, useEffect } from 'react';\nimport { Box, Button, Header, FormField, Input, Modal, SpaceBetween, Container, Alert, Textarea, Popover, StatusIndicator} from '@cloudscape-design/components';\nimport { FetchData } from \"../resources/data-provider\";\n\n\nfunction TaskCreate ({user, onSubmit, onDismiss}) {\n\n  const [userName, setUserName] = useState(user.username);\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskDescription, settaskDescription] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [submitFlag, setSubmitFlag] = useState(false);\n  const [submitSuccessFlag, setSubmitSuccessFlag] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSubmitFlag(true);\n    if(taskName.length == 0 || taskName.length > 50) {\n      setMessage({\n        \"status\": \"error\",\n        \"body\": \"The task name is required and should be at most 50 characters.\",\n        \"header\": \"Invalid input\"\n      })\n      return;\n    }\n    else if(taskDescription.length > 200) {\n      setMessage({\n        \"status\": \"error\",\n        \"body\": \"The description should be at most 200 characters.\",\n        \"header\": \"Invalid input\"\n      })\n      return;\n    }\n\n    if (taskName.length > 0) {\n      FetchData(\"/task/create-task\", \"post\", {\n        \"task_name\": taskName,\n        \"task_description\": taskDescription,\n        \"created_by\": userName\n    }).then((data) => {\n            var resp = JSON.parse(data.body);\n            console.log(resp);\n            setSubmitSuccessFlag(true);\n            e.task = resp;\n            onSubmit(e);\n        })\n        .catch((err) => {\n           console.log(err.message);\n           setMessage({\n              \"status\": \"error\",\n              \"body\": err.message,\n              \"header\": \"Failed to create the new task\"\n            });\n        });\n\n    }\n\n  }\n\n  const handletaskNameChange = e => {\n    setTaskName(e.detail.value);\n  }\n\n  const handleDescriptionChange = e => {\n    settaskDescription(e.detail.value);\n  }\n    return (<Modal\n      visible={true}\n      onSubmit={handleSubmit}\n      onDismiss={onDismiss}\n      //size=\"large\"\n      header=\"Step 1: initiate an image accuracy evaluation task\"\n      closeAriaLabel=\"Close dialog\"\n      footer={\n        <Box float=\"right\">\n          <SpaceBetween direction=\"horizontal\" size=\"xs\">\n            <Button variant=\"primary\" formAction='true' onClick={handleSubmit} disabled={submitSuccessFlag}>\n              Create task\n            </Button>\n            <Button variant=\"normal\" onClick={onDismiss}>\n              {submitSuccessFlag? \"Close\": \"Cancel\"}\n            </Button>\n          </SpaceBetween>\n        </Box>\n      }>\n      {message !== null?  \n        <Alert\n          statusIconAriaLabel={message.status}\n          header={message.header}\n        >{message.body}\n        </Alert>:<div/>}\n        <br/>\n        <form onSubmit={handleSubmit}>\n            <SpaceBetween direction=\"vertical\" size=\"l\">\n              <FormField label=\"Task name\" >\n                <Input \n                  value={taskName} \n                  onChange={handletaskNameChange} \n                  ariaRequired={true} \n                  invalid={submitFlag && (taskName.trim().length === 0 || taskName.length > 50)} />\n              </FormField>\n              <FormField label=\"Description\" >\n                <Textarea \n                  value={taskDescription} \n                  onChange={handleDescriptionChange} \n                  invalid={submitFlag && (taskDescription !== null && taskDescription.length > 200)}/>\n              </FormField>\n            </SpaceBetween>\n        </form>\n\n    </Modal>\n  );\n}\n\nexport {TaskCreate};","import React, { useState, useEffect } from 'react';\nimport Slider from '@mui/material/Slider';\nimport {Container, ColumnLayout, Grid, Box, Link, Header, StatusIndicator,PieChart, Button, BarChart, AreaChart, ButtonDropdown, Spinner} from '@cloudscape-design/components';\nimport {ModerationCategories, TypeFilterValue, ConfidenceValue} from '../resources/data-provider';\nimport { FetchData } from \"../resources/data-provider\";\n\nfunction TaskReport ({selectedTask, onBack}) {\n    const [task, setTask] = useState(selectedTask);\n    const [report, setReport] = useState(null);\n    const [loadingStatus, setLoadingStatus] = useState(null); // null, LOADING, LOADED\n\n    const [topCategoryFilter, setTopCategoryFilter] = useState(null);\n    const [subCategoryFilter, setSubCategoryFilter] = useState(null);\n    const [typeFilter, setTypeFilter] = useState(null);\n    const [confidenceThreshold, setConfidenceThreshold] = useState(null);\n    const [subCategories, setSubCategories] = useState(null);\n\n    const [reportUrl, setReportUrl] = useState(null);\n\n    useEffect(() => {\n      // Auto refresh \n      if (loadingStatus === null && task !== null) {\n        reloadReport();\n      }\n    })\n  \n    function reloadReport() {\n      setLoadingStatus(\"LOADING\");\n\n      FetchData(\"/report/report\", \"post\", {\n        id: task.id,\n        top_category: topCategoryFilter,\n        sub_category: subCategoryFilter,\n        type: typeFilter,\n        confidence_threshold: confidenceThreshold,\n      }).then((data) => {\n            var j = JSON.parse(data.body)\n            setReport(j);\n            setLoadingStatus(\"LOADED\");\n        })\n        .catch((err) => {\n          console.log(err.message);\n          setLoadingStatus(\"LOADED\");\n        });\n    }\n\n    const handleTopCategoryItemClick = e => {\n      if (e.detail.id == topCategoryFilter) \n        return;\n      if (e.detail.id == '-- All --')\n        setTopCategoryFilter(null);\n      else  \n        setTopCategoryFilter(e.detail.id);\n      \n      // Set sub category filter\n      var sub = ModerationCategories[e.detail.id].map((x) => {\n        return {\n            \"id\": x,\n            \"text\": x\n        };\n      })\n      setSubCategories(sub);\n      setLoadingStatus(null);\n    }\n\n    const handleSubCategoryItemClick = e => {\n      console.log(e);\n      if (e.detail.id == topCategoryFilter) \n        return;\n      if (e.detail.id == '-- All --')\n        setSubCategoryFilter(null);\n      else  \n        setSubCategoryFilter(e.detail.id);\n      setLoadingStatus(null);\n    }\n\n    const handleTypeItemClick = e => {\n      if (e.detail.id == typeFilter)\n        return;\n\n      if (e.detail.id === '-')\n        setTypeFilter(null);\n      else\n        setTypeFilter(e.detail.id);\n      setLoadingStatus(null);\n    }\n\n    const handleConfidenceItemClick = e => {\n      if (parseInt(e.target.value) == confidenceThreshold)\n        return;\n      setConfidenceThreshold(parseInt(e.target.value));\n      setLoadingStatus(null);\n    } \n\n    const handleReset = e => {\n      setTopCategoryFilter(null);\n      setSubCategoryFilter(null);\n      setConfidenceThreshold(null);\n      setTypeFilter(null);\n      setLoadingStatus(null);\n    }\n\n    const handleExport = e => {\n      FetchData(\"/report/export\", \"post\", {\n        id: task.id,\n        top_category: topCategoryFilter,\n        sub_category: subCategoryFilter,\n        type: typeFilter,\n        confidence_threshold: confidenceThreshold,\n      }).then((data) => {\n            setReportUrl(data.body)\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    }\n  \n    const Filter = () => (\n      <div>\n      <ColumnLayout columns=\"1\" variant=\"text-grid\">\n        <Box float='right'>\n              {loadingStatus === \"LOADING\"?<Spinner />\n              :<div /> } \n         &nbsp;<Button variant=\"normal\" onClick={handleReset} disabled={topCategoryFilter === null && subCategoryFilter === null && typeFilter === null && confidenceThreshold === null} >Reset</Button>    \n         &nbsp;<Button variant=\"primary\" onClick={onBack}>Back to list</Button>\n         &nbsp;<Button variant=\"normal\" download={true} onClick={handleExport}>Export moderation result to CSV</Button>  \n          {reportUrl !== null? <a href={reportUrl} onClick={e=> setReportUrl(null)}>Download CSV</a>: <div/> }          </Box>\n      </ColumnLayout>\n      <br/>\n      <Container>\n      <ColumnLayout columns=\"4\" variant=\"text-grid\">\n        <ButtonDropdown\n          onItemClick={handleTopCategoryItemClick}\n          items={Object.keys(ModerationCategories).map((x) => {\n                      return {\n                          \"id\": x,\n                          \"text\": x\n                      };\n                    })}\n          expandableGroups\n        >\n          {topCategoryFilter === null? \"Filter top level category\": topCategoryFilter}\n        </ButtonDropdown>       \n        <ButtonDropdown\n          onItemClick={handleSubCategoryItemClick}\n          items={subCategories !== null? subCategories: []}\n          expandableGroups\n        >\n          {subCategoryFilter === null? \"Filter secondary level category\": subCategoryFilter}\n        </ButtonDropdown> \n        <ButtonDropdown\n          onItemClick={handleTypeItemClick}\n          items={TypeFilterValue}\n          expandableGroups\n        >\n          {typeFilter === null? \"Filter by review result\": TypeFilterValue.find(t => t.id == typeFilter).text}\n        </ButtonDropdown>\n        <div>\n        Select confidence threshold: <br/>\n        <Slider style={{width:200}}\n          defaultValue={50} \n          value={confidenceThreshold}\n          min={50} max={100} \n          size=\"medium\" \n          step=\"1\" \n          marks={[\n            {\n              value: 50,\n              label: \"50%\",\n            },\n            {\n              value: 75,\n              label: \"75%\",\n            },\n            {\n              value: 100,\n              label: \"100%\",\n            },\n          ]}\n          aria-label=\"Default\" \n          valueLabelDisplay=\"auto\"\n          valueLabelFormat={value => <div>{value + '%'}</div>}\n          onChange={handleConfidenceItemClick}/>\n        </div> \n       </ColumnLayout>\n       </Container>\n       </div>\n    )\n    \n    const Metrics = () => (\n      <Container\n        header={\n          <Header \n            variant=\"h2\" \n            description={task.name + \" - \" + task.description}>\n            Moderation accuracy overview\n            &nbsp;&nbsp;<StatusIndicator type={task.status === 'COMPLETED' ? 'success' : task.status === 'FAILED'? 'error': 'info' }>{task.status}</StatusIndicator>\n          </Header>\n        }\n        >\n\n        <ColumnLayout columns=\"3\" variant=\"text-grid\">\n          <div>\n            <Box variant=\"awsui-key-label\">Total number of images</Box>\n            <Box variant=\"awsui-value-large\">{parseInt(task.total_files).toLocaleString(\"en-US\")}</Box>\n          </div>\n          <div>\n            <Box variant=\"awsui-key-label\">Images flagged by Rekognition as inappropriate</Box>\n            <Box variant=\"awsui-value-large\">{report !== null?report.labeled.toLocaleString(\"en-US\"):0}</Box>\n          </div>\n          <div>\n            <Box variant=\"awsui-key-label\">Rekognition label ratio</Box>\n            <Box variant=\"awsui-value-large\">{report !== null?(report.labeled*100/parseInt(task.total_files)).toFixed(2)+\"%\":0}</Box>\n          </div>\n        </ColumnLayout>\n        <ColumnLayout columns=\"3\" variant=\"text-grid\">\n          <div>\n            <Box variant=\"awsui-key-label\">Human reviewed images</Box>\n            <Box variant=\"awsui-value-large\">{report !== null?report.reviewed.toLocaleString(\"en-US\"):0}</Box>\n          </div>\n          <div>\n            <Box variant=\"awsui-key-label\">False positive images</Box>\n            <Box variant=\"awsui-value-large\">{report !== null?report.fp.toLocaleString(\"en-US\"):0}</Box>\n          </div>\n          <div>\n            <Box variant=\"awsui-key-label\">True positive images</Box>\n            <Box variant=\"awsui-value-large\">{report !== null?report.tp.toLocaleString(\"en-US\"):0}</Box>\n          </div>\n          </ColumnLayout>\n      </Container>\n    )\n\n    const TypePie = () => (\n      <Container\n        header={\n          <Header \n            variant=\"h2\" \n            description=\"False Positive vs. True Positive\">\n            Human review result\n          </Header>\n        }\n        >\n        {report !== null && report.by_type !== null?\n        <PieChart\n              hideFilter=\"true\"\n              variant=\"donut\"\n              hideLegend=\"true\"\n              size='medium'\n              data={report.by_type}\n              detailPopoverContent={(datum, sum) => [\n                { key: \"Number of images\", value: datum.value },\n                {\n                  key: \"Percentage\",\n                  value: `${((datum.value / sum) * 100).toFixed(\n                    0\n                  )}%`\n                }\n              ]}\n              segmentDescription={(datum, sum) =>\n                `${datum.value} images, ${(\n                  (datum.value / sum) *\n                  100\n                ).toFixed(0)}%`\n              }\n              i18nStrings={{\n                detailsValue: \"Value\",\n                detailsPercentage: \"Percentage\",\n                filterLabel: \"Filter displayed data\",\n                filterPlaceholder: \"Filter data\",\n                filterSelectedAriaLabel: \"selected\",\n                detailPopoverDismissAriaLabel: \"Dismiss\",\n                legendAriaLabel: \"Legend\",\n                chartAriaRoleDescription: \"pie chart\",\n                segmentAriaRoleDescription: \"segment\"\n              }}\n              ariaDescription=\"Pie chart showing number of images by Rekognition moderation top category.\"\n              ariaLabel=\"Pie chart\"\n              errorText=\"Error loading data.\"\n              loadingText=\"Loading chart\"\n              recoveryText=\"Retry\"\n              empty={\n                <Box textAlign=\"center\" color=\"inherit\">\n                  <b>No data available</b>\n                  <Box variant=\"p\" color=\"inherit\">\n                    There is no data available\n                  </Box>\n                </Box>\n              }\n            />: <div/>}\n      </Container>\n    )\n\n    const ByTopCategoryPie = () => (\n      <Container\n        header={\n          <Header \n            variant=\"h2\" \n            description=\"Number of images by moderation top level category\">\n            Distribution by moderation top level category\n          </Header>\n        }\n        >\n        {report !== null && report.by_top_category !== null?\n        <PieChart\n              hideFilter=\"true\"\n              variant=\"donut\"\n              hideLegend=\"true\"\n              size='medium'\n              data={report.by_top_category}\n              detailPopoverContent={(datum, sum) => [\n                { key: \"Number of images\", value: datum.value },\n                {\n                  key: \"Percentage\",\n                  value: `${((datum.value / sum) * 100).toFixed(\n                    0\n                  )}%`\n                }\n              ]}\n              segmentDescription={(datum, sum) =>\n                `${datum.value} images, ${(\n                  (datum.value / sum) *\n                  100\n                ).toFixed(0)}%`\n              }\n              i18nStrings={{\n                detailsValue: \"Value\",\n                detailsPercentage: \"Percentage\",\n                filterLabel: \"Filter displayed data\",\n                filterPlaceholder: \"Filter data\",\n                filterSelectedAriaLabel: \"selected\",\n                detailPopoverDismissAriaLabel: \"Dismiss\",\n                legendAriaLabel: \"Legend\",\n                chartAriaRoleDescription: \"pie chart\",\n                segmentAriaRoleDescription: \"segment\"\n              }}\n              ariaDescription=\"Pie chart showing number of images by Rekognition moderation top category.\"\n              ariaLabel=\"Pie chart\"\n              errorText=\"Error loading data.\"\n              loadingText=\"Loading chart\"\n              recoveryText=\"Retry\"\n              empty={\n                <Box textAlign=\"center\" color=\"inherit\">\n                  <b>No data available</b>\n                  <Box variant=\"p\" color=\"inherit\">\n                    There is no data available\n                  </Box>\n                </Box>\n              }\n            />: <div/>}\n      </Container>\n    )\n\n    const BySubCategoryByTypeBar = () => (\n      <Container\n      header={\n        <Header \n          variant=\"h2\" \n          description=\"Number of images by moderation secondary level category\">\n          Distribution by moderation secondary level category\n        </Header>\n      }\n      >\n        {report !== null && report.by_sub_category_type !== null?\n        <BarChart\n              detailPopoverSize=\"large\"\n              series={[\n                \n                {\n                  title: \"True Positive\",\n                  type: \"bar\",\n                  data: report.by_sub_category_type[\"true-positive\"].map((x, result) => {\n                    return {\n                        \"x\": x.title,\n                        \"y\": x.value\n                    };\n                  }),\n                  valueFormatter: e => e.toLocaleString(\"en-US\")\n                },\n                {\n                  title: \"False Positive\",\n                  type: \"bar\",\n                  data: report.by_sub_category_type[\"false-positive\"].map((x, result) => {\n                    return {\n                        \"x\": x.title,\n                        \"y\": x.value\n                    };\n                  }),\n                  valueFormatter: e => e.toLocaleString(\"en-US\")\n                }\n              ]}\n              xDomain={report.by_sub_category.map(i=>i.title)} \n              yDomain={[0, Math.max(...report.by_sub_category_type[\"true-positive\"].map(x => x.value).concat(report.by_sub_category_type[\"false-positive\"].map(x => x.value)))]}\n              i18nStrings={{\n                filterLabel: \"Filter displayed data\",\n                filterPlaceholder: \"Filter data\",\n                filterSelectedAriaLabel: \"selected\",\n                detailPopoverDismissAriaLabel: \"Dismiss\",\n                legendAriaLabel: \"Legend\",\n                chartAriaRoleDescription: \"line chart\",\n                xTickFormatter: e =>\n                  e.toLocaleString(\"en-US\"),\n              }}\n              ariaLabel=\"Single data series line chart\"\n              errorText=\"Error loading data.\"\n              height={300}\n              hideFilter\n              loadingText=\"Loading chart\"\n              recoveryText=\"Retry\"\n              xScaleType=\"categorical\"\n              xTitle=\"Moderation category\"\n              yTitle=\"Number of images\"\n              empty={\n                <Box textAlign=\"center\" color=\"inherit\">\n                  <b>No data available</b>\n                  <Box variant=\"p\" color=\"inherit\">\n                    There is no data available\n                  </Box>\n                </Box>\n              }\n              noMatch={\n                <Box textAlign=\"center\" color=\"inherit\">\n                  <b>No matching data</b>\n                  <Box variant=\"p\" color=\"inherit\">\n                    There is no matching data to display\n                  </Box>\n                  <Button>Clear filter</Button>\n                </Box>\n              }\n            />:<div />}\n      </Container>\n    )\n\n    const ByTopCategoryByTypeBar = () => (\n      <Container\n      header={\n        <Header \n          variant=\"h2\" \n          description=\"Number of images by moderation top level category\">\n          Distribution by moderation top level category\n        </Header>\n      }\n      >\n        {report !== null && report.by_sub_category_type !== null?\n        <BarChart\n              detailPopoverSize=\"large\"\n              series={[\n                \n                {\n                  title: \"True Positive\",\n                  type: \"bar\",\n                  data: report.by_top_category_type[\"true-positive\"].map((x, result) => {\n                    return {\n                        \"x\": x.title,\n                        \"y\": x.value\n                    };\n                  }),\n                  valueFormatter: e => e.toLocaleString(\"en-US\")\n                },\n                {\n                  title: \"False Positive\",\n                  type: \"bar\",\n                  data: report.by_top_category_type[\"false-positive\"].map((x, result) => {\n                    return {\n                        \"x\": x.title,\n                        \"y\": x.value\n                    };\n                  }),\n                  valueFormatter: e => e.toLocaleString(\"en-US\")\n                }\n              ]}\n              xDomain={report.by_top_category.map(i=>i.title)} \n              yDomain={[0, Math.max(...report.by_top_category_type[\"true-positive\"].map(x => x.value).concat(report.by_top_category_type[\"false-positive\"].map(x => x.value)))]}\n              i18nStrings={{\n                filterLabel: \"Filter displayed data\",\n                filterPlaceholder: \"Filter data\",\n                filterSelectedAriaLabel: \"selected\",\n                detailPopoverDismissAriaLabel: \"Dismiss\",\n                legendAriaLabel: \"Legend\",\n                chartAriaRoleDescription: \"line chart\",\n                xTickFormatter: e =>\n                  e.toLocaleString(\"en-US\"),\n              }}\n              ariaLabel=\"Single data series line chart\"\n              errorText=\"Error loading data.\"\n              height={300}\n              hideFilter\n              loadingText=\"Loading chart\"\n              recoveryText=\"Retry\"\n              xScaleType=\"categorical\"\n              xTitle=\"Moderation category\"\n              yTitle=\"Number of images\"\n              empty={\n                <Box textAlign=\"center\" color=\"inherit\">\n                  <b>No data available</b>\n                  <Box variant=\"p\" color=\"inherit\">\n                    There is no data available\n                  </Box>\n                </Box>\n              }\n              noMatch={\n                <Box textAlign=\"center\" color=\"inherit\">\n                  <b>No matching data</b>\n                  <Box variant=\"p\" color=\"inherit\">\n                    There is no matching data to display\n                  </Box>\n                  <Button>Clear filter</Button>\n                </Box>\n              }\n            />:<div />}\n      </Container>\n    )\n\n    const ByConfidenceByTypeBar = () => (\n      <Container\n      header={\n        <Header \n          variant=\"h2\" \n          description=\"Number of images in each confidence score bucket\">\n          Confidence score distribution\n        </Header>\n      }\n      >\n        {report !== null && report.by_confidence_type !== null?\n        <BarChart\n              stackedBars\n              detailPopoverSize=\"large\"\n              series={[\n                \n                {\n                  title: \"True Positive\",\n                  type: \"bar\",\n                  data: report.by_confidence_type[\"true-positive\"].map((x, result) => {\n                    return {\n                        \"x\": x.title,\n                        \"y\": x.value\n                    };\n                  }),\n                  valueFormatter: e => e.toLocaleString(\"en-US\")\n                },\n                {\n                  title: \"False Positive\",\n                  type: \"bar\",\n                  data: report.by_confidence_type[\"false-positive\"].map((x, result) => {\n                    return {\n                        \"x\": x.title,\n                        \"y\": x.value\n                    };\n                  }),\n                  valueFormatter: e => e.toLocaleString(\"en-US\")\n                }\n              ]}\n              xDomain={[\"50\", \"55\", \"60\", \"65\", \"70\", \"75\", \"80\", \"85\", \"90\", \"95\"]} \n              yDomain={[0, Math.max(...report.by_confidence_type[\"true-positive\"].map(x => x.value)) + Math.max(...report.by_confidence_type[\"false-positive\"].map(x => x.value))]}\n              i18nStrings={{\n                filterLabel: \"Filter displayed data\",\n                filterPlaceholder: \"Filter data\",\n                filterSelectedAriaLabel: \"selected\",\n                detailPopoverDismissAriaLabel: \"Dismiss\",\n                legendAriaLabel: \"Legend\",\n                chartAriaRoleDescription: \"line chart\",\n                xTickFormatter: e =>\n                  e + '%',\n              }}\n              ariaLabel=\"Single data series line chart\"\n              errorText=\"Error loading data.\"\n              height={300}\n              hideFilter\n              loadingText=\"Loading chart\"\n              recoveryText=\"Retry\"\n              xScaleType=\"categorical\"\n              xTitle=\"Confidence score range\"\n              yTitle=\"Number of images\"\n              empty={\n                <Box textAlign=\"center\" color=\"inherit\">\n                  <b>No data available</b>\n                  <Box variant=\"p\" color=\"inherit\">\n                    There is no data available\n                  </Box>\n                </Box>\n              }\n              noMatch={\n                <Box textAlign=\"center\" color=\"inherit\">\n                  <b>No matching data</b>\n                  <Box variant=\"p\" color=\"inherit\">\n                    There is no matching data to display\n                  </Box>\n                  <Button>Clear filter</Button>\n                </Box>\n              }\n            />:<div />}\n      </Container>\n    )\n\n    return (\n      <div>\n          <Filter />\n          <br />\n          <Metrics />\n          <br/>\n          <ColumnLayout columns={2}>\n            <ByTopCategoryPie />\n            <TypePie />\n          </ColumnLayout>\n          <br/>\n          <ByTopCategoryByTypeBar />\n          <br/>\n          <BySubCategoryByTypeBar />\n          <br />\n          <ByConfidenceByTypeBar />\n      </div>\n    );\n}\n\nexport {TaskReport};","import React, { useState, useEffect } from 'react';\nimport {Cards, Container, Box, Button, Badge, Header, Pagination, ColumnLayout, Spinner, ButtonDropdown, Link, Toggle, TextFilter} from '@cloudscape-design/components';\nimport {ModerationCategories, TypeFilterValue, ConfidenceValue} from '../resources/data-provider';\nimport { FetchData } from \"../resources/data-provider\";\nimport Slider from '@mui/material/Slider';\n\nconst PAGE_SIZE = 15;\n\nfunction TaskImages ({selectedTask, onBack}) {\n    const [task, setTask] = useState(selectedTask);\n    const [images, setImages] = useState(null);\n    const [filteredImages, setFilteredImages] = useState(null);\n    const [loadingStatus, setLoadingStatus] = useState(null); // null, LOADING, LOADED\n    const [currentPageIndex, setCurrentPageIndex] = React.useState(1);\n    const [currentImages, setCurrentImages] = useState(null);\n\n    const [topCategoryFilter, setTopCategoryFilter] = useState(null);\n    const [subCategoryFilter, setSubCategoryFilter] = useState(null);\n    const [typeFilter, setTypeFilter] = useState(null);\n    const [confidenceThreshold, setConfidenceThreshold] = useState(null);\n    const [subCategories, setSubCategories] = useState(null);\n    const [showUnflag, setShowUnflag] = useState(false);\n    const [showUnflagToggle, setShowUnflagToggle] = useState(false);\n\n    const [filterText, setFilterText] = useState(null);\n\n      useEffect(() => {\n        // Auto refresh \n        if (loadingStatus === null) {\n            const queryParams = new URLSearchParams(window.location.search);\n            setShowUnflagToggle(queryParams.get(\"unflag\"));\n            \n            reloadImages(showUnflag);\n        }\n      })\n\n      function getCurrentPageImages (items, curPage=null) {\n        if (curPage === null) curPage = currentPageIndex;\n        if (items === null || items.length === 0) return [];\n        else {\n          var result = [];\n          items.forEach((i, index) => {\n            //console.log(index, (currentPageIndex - 1) * PAGE_SIZE, currentPageIndex * PAGE_SIZE);\n            if (index >= ((curPage - 1) * PAGE_SIZE) && index < curPage * PAGE_SIZE) {\n              result.push(i);\n            }\n            return result;\n          }, result)\n        }\n        return result;\n      }    \n\n      function reloadImages(unflag=false) {\n        \n        setLoadingStatus(\"LOADING\");\n        FetchData(unflag?'/report/images-unflag':'/report/images', 'post', {\n            id: task.id,\n            top_category: topCategoryFilter,\n            sub_category: subCategoryFilter,\n            type: typeFilter,\n            confidence_threshold: confidenceThreshold,\n          }).then((data) => {\n              var j = JSON.parse(data.body);\n              setImages(j);\n              filterImagesByText(j,filterText);\n              setCurrentImages(getCurrentPageImages(j));\n              setLoadingStatus(\"LOADED\");\n          })\n          .catch((err) => {\n            console.log(err.message);\n            setLoadingStatus(\"LOADED\");\n          });\n      }\n  \n      const handleTopCategoryItemClick = e => {\n        if (e.detail.id == topCategoryFilter) \n          return;\n        if (e.detail.id == '-- All --')\n          setTopCategoryFilter(null);\n        else  \n          setTopCategoryFilter(e.detail.id);\n        \n        // Set sub category filter\n        var sub = ModerationCategories[e.detail.id].map((x) => {\n          return {\n              \"id\": x,\n              \"text\": x\n          };\n        })\n        setSubCategories(sub);\n        setLoadingStatus(null);\n        setCurrentPageIndex(1);\n      }\n  \n      const handleSubCategoryItemClick = e => {\n        console.log(e);\n        if (e.detail.id == topCategoryFilter) \n          return;\n        if (e.detail.id == '-- All --')\n          setSubCategoryFilter(null);\n        else  \n          setSubCategoryFilter(e.detail.id);\n        setLoadingStatus(null);\n        setCurrentPageIndex(1);\n      }\n  \n      const handleTypeItemClick = e => {\n        if (e.detail.id == typeFilter)\n          return;\n  \n        if (e.detail.id === '-')\n          setTypeFilter(null);\n        else\n          setTypeFilter(e.detail.id);\n        setLoadingStatus(null);\n        setCurrentPageIndex(1);\n      }\n\n      const handleConfidenceItemClick = e => {\n        if (parseInt(e.target.value) == confidenceThreshold)\n          return;\n        setConfidenceThreshold(parseInt(e.target.value));\n        setLoadingStatus(null);\n        setCurrentPageIndex(1);\n      } \n  \n      const handleReset = e => {\n        setTopCategoryFilter(null);\n        setSubCategoryFilter(null);\n        setConfidenceThreshold(null);\n        setTypeFilter(null);\n        setLoadingStatus(null);\n        setCurrentPageIndex(1);\n        setFilterText(null);\n        setShowUnflagToggle(false);\n      }\n\n      const handlePaginationChange = e => {\n        setCurrentPageIndex(e.detail.currentPageIndex);\n        setCurrentImages(getCurrentPageImages(images, e.detail.currentPageIndex));\n      }\n\n      function filterImagesByText(all_images=null,text=null) {\n        if (text === null)\n          text = filterText;\n        if (all_images === null)\n          all_images = Object.assign({}, images);\n\n        let result = [];\n        // filter by name\n        if (text !== null && text.length > 0) {\n          all_images.forEach((i) => {\n            if (i.file_path.toLowerCase().includes(text.toLowerCase())) {\n              result.push(i);\n            }\n            return result;\n          }, result)                \n          console.log(result.length);\n          setFilteredImages(result);\n          setCurrentImages(getCurrentPageImages(result));\n        }\n        else {\n          setFilteredImages(all_images);\n          setCurrentImages(getCurrentPageImages(all_images));\n        }        \n      }\n\n      const handleFilterChange = e => {\n        setFilterText(e.detail.filteringText.trim());\n        filterImagesByText(images, e.detail.filteringText.trim());\n      }\n\n    const Filter = () => (\n        <div>\n        <ColumnLayout columns=\"1\" variant=\"text-grid\">\n          <Box float='right'>\n                {loadingStatus === \"LOADING\"?<Spinner />\n                :<div /> } \n           &nbsp;<Button variant=\"normal\" onClick={handleReset} disabled={topCategoryFilter === null && subCategoryFilter === null && typeFilter === null && confidenceThreshold === null && currentPageIndex == 1 && (filterText === null || filterText.length === 0) } >Reset</Button>    \n           &nbsp;<Button variant=\"primary\" onClick={onBack}>Back to list</Button>\n          </Box>\n        </ColumnLayout>\n        <br/>\n        <Container float='left'>\n        <ColumnLayout columns=\"4\" variant=\"text-grid\">\n          <ButtonDropdown\n            onItemClick={handleTopCategoryItemClick}\n            items={Object.keys(ModerationCategories).map((x) => {\n                        return {\n                            \"id\": x,\n                            \"text\": x\n                        };\n                      })}\n            expandableGroups\n          >\n            {topCategoryFilter === null? \"Filter top level category\": topCategoryFilter}\n          </ButtonDropdown>       \n          <ButtonDropdown\n            onItemClick={handleSubCategoryItemClick}\n            items={subCategories !== null? subCategories: []}\n            expandableGroups\n          >\n            {subCategoryFilter === null? \"Filter secondary level category\": subCategoryFilter}\n          </ButtonDropdown> \n          <ButtonDropdown\n            onItemClick={handleTypeItemClick}\n            items={TypeFilterValue}\n            expandableGroups\n          >\n            {typeFilter === null? \"Filter by review result\": TypeFilterValue.find(t => t.id == typeFilter).text}\n          </ButtonDropdown>  \n          <div>\n        Select confidence threshold: <br/>\n        <Slider style={{width:200}}\n          defaultValue={50} \n          value={confidenceThreshold}\n          min={50} max={100} \n          size=\"medium\" \n          step=\"1\" \n          marks={[\n            {\n              value: 50,\n              label: \"50%\",\n            },\n            {\n              value: 75,\n              label: \"75%\",\n            },\n            {\n              value: 100,\n              label: \"100%\",\n            },\n          ]}\n          aria-label=\"Default\" \n          valueLabelDisplay=\"auto\"\n          valueLabelFormat={value => <div>{value + '%'}</div>}\n          onChange={handleConfidenceItemClick}/>\n        </div> \n        </ColumnLayout>\n        <ColumnLayout columns=\"1\" variant=\"text-grid\">\n          {showUnflagToggle?\n          <div>\n            <br/>\n          <Toggle\n            onChange={({ detail }) =>\n              {\n                setShowUnflag(detail.checked);\n                reloadImages(detail.checked);\n              }\n            }\n            checked={showUnflag}\n          >\n            Show unflagged images (This is a hidden feature for debugging purposes. The page may time out to display more than 3,000 images.)\n          </Toggle></div>:<div />}\n          </ColumnLayout>\n          </Container>\n         </div>\n      )\n\n    return (\n        <div>\n            <Filter/>\n            <br/>\n            <Cards\n                cardDefinition={{\n                    header: item => (\n                    <Link fontSize=\"heading-m\">{item !== null?item.name:\"\"}</Link>\n                    ),\n                    sections: [\n                    {\n                        id: \"file_path\",\n                        header: \"File name\",\n                        content: item => item !== null ?<Link href={item.url} external=\"true\"> {item.file_path.split('/').at(-1)}</Link>: \"\"\n                    },\n                    {\n                        id: \"top_category\",\n                        header: \"Rekognition labeled category\",\n                        content: item => item !== null ?item.top_category + \" / \" + item.sub_category: \"\"\n                    },\n                    {\n                        id: \"confidence\",\n                        header: \"Rekognition confidence score\",\n                        content: item => item !== null ?parseFloat(item.confidence ).toFixed(2)+\"%\" : \"\"\n                    },\n                    {\n                        id: \"type\",\n                        header: \"Human review result\",\n                        content: item => item !== null ?<Badge color={item.type === \"false-positive\"? \"red\": \"green\"}>{item.type}</Badge> : \"\"\n                    },\n                    {\n                        id: \"url\",\n                        header: \"Image\",\n                        content: item => item !== null ? <img src={item.url} width=\"100%\" height=\"auto\"/>: <div/>\n                    }\n                    ]\n                }}\n                cardsPerRow={[\n                    { cards: 1 },\n                    { minWidth: 230, cards: 3 }\n                ]}\n                items={currentImages !== null?currentImages:[]}\n                filter={\n                  <TextFilter filteringPlaceholder=\"Find images by file name\" filteringText={filterText} \n                      onChange={handleFilterChange} />\n                }\n                loadingText=\"Loading images\"\n                empty={\n                    <Box textAlign=\"center\" color=\"inherit\">\n                    <b>No images</b>\n                    <Box\n                        padding={{ bottom: \"s\" }}\n                        variant=\"p\"\n                        color=\"inherit\"\n                    >\n                        No images to display.\n                    </Box>\n                    </Box>\n                }\n                header={<Header>Images flagged by Rekognition as inappropriate ({filteredImages === null? 0 :filteredImages.length})</Header>}\n                pagination={\n                    <Pagination\n                      currentPageIndex={currentPageIndex}\n                      onChange={handlePaginationChange}\n                      pagesCount={filteredImages !== null?Math.ceil(filteredImages.length/PAGE_SIZE,0): 1}\n                      ariaLabels={{\n                        nextPageLabel: \"Next page\",\n                        previousPageLabel: \"Previous page\",\n                        pageLabel: pageNumber =>\n                          `Page ${pageNumber} of all pages`\n                      }}\n                    />\n                  }\n        \n                />\n                <Box float='right'>\n                <Pagination\n                      currentPageIndex={currentPageIndex}\n                      onChange={handlePaginationChange}\n                      pagesCount={filteredImages !== null?Math.ceil(filteredImages.length/PAGE_SIZE,0): 1}\n                      ariaLabels={{\n                        nextPageLabel: \"Next page\",\n                        previousPageLabel: \"Previous page\",\n                        pageLabel: pageNumber =>\n                          `Page ${pageNumber} of all pages`\n                      }}\n                    />\n                </Box>\n           </div>\n    );\n}\n\nexport {TaskImages};","import { useState, useEffect } from \"react\";\nimport * as React from \"react\";\nimport { Box, Button, Table, TextFilter, Modal, SpaceBetween, Container, Alert, Textarea, Link,Pagination, StatusIndicator, Header} from '@cloudscape-design/components';\nimport { TaskDetail } from './task-detail';\nimport { TaskCreate } from \"./task-create\";\nimport { TaskReport } from './task-report';\nimport { TaskImages } from './task-images';\nimport { FetchData } from \"../resources/data-provider\";\n\nconst PAGE_SIZE = 10;\n\nfunction TaskList ({user, onItemClick, onSelectionChange}) {\n\n\n  function getCurrentPageItems (items, curPage=null) {\n    if (curPage === null) curPage = currentPageIndex;\n    if (items === null || items.length === 0) return [];\n    else {\n      var result = [];\n      items.forEach((i, index) => {\n        //console.log(index, (currentPageIndex - 1) * PAGE_SIZE, currentPageIndex * PAGE_SIZE);\n        if (index >= ((curPage - 1) * PAGE_SIZE) && index < curPage * PAGE_SIZE) {\n          result.push(i);\n        }\n        return result;\n      }, result)\n    }\n    return result;\n  }\n  const [currentPageIndex, setCurrentPageIndex] = React.useState(1);\n  const [items, setItems] = useState([]);\n  const [pageItems, setPageItems] = useState([]);\n  const [isDescending, setIsDescending] = useState(false);\n  const [filterText, setFilterText] = useState(null);\n\n  const [selectedItems, setSelectedItems ] = useState([]);\n  const [showCreate, setShowCreate] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n\n  const [showDetail, setShowDetail] = useState(false); \n  const [showReport, setShowReport] = useState(false); \n  const [showImages, setShowImages] = useState(false); \n  const [loadingStatus, setLoadingStatus] = useState(null); //null, LOADING, LOADED\n  \n  \n  useEffect(() => {\n    if (items.length === 0 && loadingStatus === null) {\n      setLoadingStatus(\"LOADING\");\n      FetchData('/task/tasks', \"get\")\n        .then((data) => {\n            var resp = JSON.parse(data.body);\n            setItems(resp);\n            setPageItems(getCurrentPageItems(resp));\n            setLoadingStatus(\"LOADED\");\n        })\n        .catch((err) => {\n          setLoadingStatus(\"LOADED\");\n          console.log(err.message);\n        });\n      \n    }\n  })\n\n  const handleViewDetail = e => {\n    const id = e.detail.target;\n    setSelectedItems([items.find(i =>i.id == id)]);\n    setShowDetail(true);\n    setShowCreate(false);\n  }\n\n  async function handleDeleteSubmit(e)  {\n    setShowDelete(false);\n    var si = Object.assign({}, selectedItems[0]);\n    si.status = \"DELETING\"\n    setSelectedItems([si]);\n\n    setLoadingStatus(\"LOADING\");\n\n    if (selectedItems !== null && selectedItems.length > 0) {\n      FetchData(\"/task/delete-task\", \"post\", {\n        id: selectedItems[0].id\n      }).then((data) => {\n            if (data.statusCode == \"200\")\n            setItems([]);\n            setPageItems([]);\n            setLoadingStatus(null);\n          })\n        .catch((err) => {\n          console.log(err.message);\n        });      \n    }\n  }\n\n  const handleDeleteDismiss = e => {\n    setShowDelete(false);\n  }\n\n  const handleTaskCreate = e => {\n    setShowCreate(true);\n  }\n\n  const handleCreateDismiss = e => {\n    setShowCreate(false);\n  }\n\n  const handleBackToList = e => {\n    // reload the list\n    setItems([]);\n    setPageItems([]);\n    setSelectedItems([]);\n    setShowDetail(false);\n    setShowReport(false);\n    setShowImages(false);\n    setLoadingStatus(null);\n  }\n\n  const handleCreateSubmit = e => {\n    setShowCreate(false);    \n    setSelectedItems([e.task]);\n    setShowDetail(true);\n  }\n\n  const handleDelete = e =>{\n    setShowDelete(true);\n  }\n\n  const handleReport = e => {\n    if (e.task !== undefined)\n      setSelectedItems([e.task]);\n    setShowReport(true);\n    setShowDetail(false);\n  }\n  const handleImages = e => {\n    if (e.task !== undefined)\n      setSelectedItems([e.task]);\n    setShowImages(true);\n    setShowDetail(false);\n}\n  const handleSortingChange = e => {\n    //console.log(e);\n    if (items.length == 0)\n      return\n\n    let is = items.map(i=> i);\n    var sortingField = e.detail.sortingColumn.sortingField;\n    if (!isDescending) {\n      is.sort( (a, b) => {\n        if (sortingField === \"total_files\")\n          return a[sortingField] - b[sortingField];\n        if (a[sortingField] < b[sortingField]) {\n          return -1;\n        }\n        if (a[sortingField] > b[sortingField]) {\n          return 1;\n        }\n      });\n    }\n    else {\n      is.reverse( (a, b) => {\n        if (sortingField === \"total_files\")\n          return a[sortingField] - b[sortingField];\n\n        if (a[sortingField] < b[sortingField]) {\n          return -1;\n        }\n        if (a[sortingField] > b[sortingField]) {\n          return 1;\n        }\n      });\n    }\n    setIsDescending(!isDescending);\n    setItems(is);\n    setPageItems(getCurrentPageItems(is));\n  }\n\nconst handlePaginationChange = e => {\n  console.log(e);\n  setCurrentPageIndex(e.detail.currentPageIndex);\n  setPageItems(getCurrentPageItems(items, e.detail.currentPageIndex));\n}\n\nconst handleFilterChaneg = e => {\n  setFilterText(e.detail.filteringText);\n  if (filterText === null || filterText.length == 0) {\n    setItems(items);\n    setPageItems(getCurrentPageItems(items));\n  }\n  else if (filterText !== null) {\n    let result = []\n    items.forEach((i) => {\n      if (i.name.toLowerCase().includes(e.detail.filteringText.toLowerCase())) {\n        result.push(i);\n      }\n      return result;\n    }, result)\n    setPageItems(getCurrentPageItems(result));\n  }\n}\n\n  return (\n      <div> <br/>\n      {showDetail?<TaskDetail selectedTask={selectedItems.length > 0?selectedItems[0]:null} onBack={handleBackToList} onImageClick={handleImages} onReportClick={handleReport} />:\n        showReport?<TaskReport selectedTask={selectedItems.length > 0?selectedItems[0]:null} onBack={handleBackToList} />:\n        showImages?<TaskImages selectedTask={selectedItems.length > 0?selectedItems[0]:null} onBack={handleBackToList} />:\n        <Table\n          loading={loadingStatus === \"LOADING\"}\n          loadingText=\"Loading tasks\"\n          onSortingChange={handleSortingChange}\n          onSelectionChange={({ detail }) => {\n            setSelectedItems(detail.selectedItems);\n            }\n          }\n          selectedItems={selectedItems}\n          ariaLabels={{\n            selectionGroupLabel: \"Items selection\",\n            allItemsSelectionLabel: ({ selectedItems }) =>\n              `${selectedItems.length} ${\n                selectedItems.length === 1 ? \"item\" : \"items\"\n              } selected`,\n            itemSelectionLabel: ({ selectedItems }, item) => {\n              const isItemSelected = selectedItems.filter(\n                i => i.id === item.id\n              ).length;\n              return `${item.id} is ${\n                isItemSelected ? \"\" : \"not\"\n              } selected`;\n            }\n          }}\n          columnDefinitions={[\n            {\n              id: 'id',\n              sortingField: 'name',\n              header: 'Task name',\n              cell: item => (\n                <Link variant=\"primary\" target={item.id} onFollow={handleViewDetail}>{item.name}</Link>\n              ),\n              minWidth: 180,\n            },\n            {\n              id: 'status',\n              sortingField: 'status',\n              header: 'Status',\n              cell: item => (\n                <StatusIndicator type={item.status === 'COMPLETED' ? 'success' : item.status === 'FAILED'? 'error': 'info' }>{item.status}</StatusIndicator>\n              ),\n              minWidth: 100,\n            },\n            {\n              id: 'total_files',\n              sortingField: 'total_files',\n              cell: item => parseInt(item.total_files) > 0?parseInt(item.total_files).toLocaleString('en-US'): 0,\n              header: 'Total images',\n              minWidth: 100,\n            },\n            {\n              id: 'created_ts',\n              sortingField: 'created_ts',\n              cell: item => item.created_ts,\n              header: 'Created at',\n              minWidth: 100,\n            },\n          ]}\n          items={pageItems}\n          selectionType=\"single\"\n          trackBy=\"id\"\n          empty={\n            <Box textAlign=\"center\" color=\"inherit\">\n              <b>No evaluation tasks</b>\n              <Box\n                padding={{ bottom: \"s\" }}\n                variant=\"p\"\n                color=\"inherit\"\n              >\n                No task to display.\n              </Box>\n              <Button onClick={handleTaskCreate}>Initiate a task</Button>\n            </Box>\n          }\n          filter={\n            <TextFilter\n              filteringPlaceholder=\"Find tasks\"\n              filteringText={filterText}\n              onChange={handleFilterChaneg}\n            />\n          }\n          header={\n            <Header\n            variant=\"awsui-h1-sticky\"\n            title=\"Accuracy evaluation tasks\"\n            actions={\n              <SpaceBetween size=\"xs\" direction=\"horizontal\">\n                {/* <Button disabled={!isOnlyOneSelected}>Edit</Button>*/}\n                <Button onClick={handleReport} disabled={selectedItems.length === 0 || ![\"HUMAN_REVIEWING\", \"COMPLETED\"].includes(selectedItems[0].status)} >Check report</Button>\n                <Button onClick={handleImages} disabled={selectedItems.length === 0 || ![\"MODERATION_COMPLETED\", \"HUMAN_REVIEWING\", \"COMPLETED\"].includes(selectedItems[0].status)}>Review images</Button>\n                <Button onClick={handleDelete} disabled={selectedItems.length === 0 || selectedItems[0].status == \"MODERATING\"}>Delete task</Button>\n                <Button variant=\"primary\" onClick={handleTaskCreate}>Initiate a task</Button>\n              </SpaceBetween>\n            }\n          />\n          }\n          pagination={\n            <Pagination\n              currentPageIndex={currentPageIndex}\n              onChange={handlePaginationChange}\n              pagesCount={items !== null?Math.ceil(items.length/PAGE_SIZE,0): 1}\n              ariaLabels={{\n                nextPageLabel: \"Next page\",\n                previousPageLabel: \"Previous page\",\n                pageLabel: pageNumber =>\n                  `Page ${pageNumber} of all pages`\n              }}\n            />\n          }\n        />}\n      {showCreate?\n      <TaskCreate user={user} onSubmit={handleCreateSubmit} onDismiss={handleCreateDismiss} />\n      :<div/>}\n      {showDelete?\n        <Modal\n          visible={true}\n          onSubmit={handleDeleteSubmit}\n          onDismiss={handleDeleteDismiss}\n          size=\"medium\"\n          header=\"Delete task\"\n          closeAriaLabel=\"Close dialog\"\n          footer={\n            <Box float=\"right\">\n              <SpaceBetween direction=\"horizontal\" size=\"xs\">\n              <Button variant=\"primary\" onClick={handleDeleteSubmit}>\n                Delete\n              </Button>\n              <Button variant=\"normal\" onClick={handleDeleteDismiss}>\n                Cancel\n              </Button>\n              </SpaceBetween>\n            </Box>\n          }>\n          Do you want to delete the task: <b>{selectedItems[0].name}</b>? All related resources will be deleted, including the images uploaded to the S3 bucket folder if you have already uploaded images.\n        </Modal>      \n      :<div/>}\n    </div>\n  );\n}\n\nexport {TaskList};","import React, { useState, useEffect } from 'react';\nimport diagram from '../static/flow_diagram.png'\nimport {\n    ContentLayout,\n    Button,\n    Container,\n    Header,\n    SpaceBetween,\n    Link,\n    Alert,\n    Box,\n    RadioGroup\n  } from '@cloudscape-design/components';\n\nfunction GetStarted ({onStart}) {\n    const [messages, setMessages] = useState([]);\n\n    return (\n        <ContentLayout\n            header={\n                <SpaceBetween size=\"m\">\n                <Header\n                    variant=\"h1\"\n                    info={<Link>Info</Link>}\n                    description=\"A tool that helps you to evaluate Amazon Rekognition content moderation accuracy using your own data. \"\n                    actions={\n                        <Button onClick={onStart}>Get Started</Button>\n                    }\n                >\n                    AWS Content Moderation Accuracy Evaluation (Beta)\n                </Header>\n                {messages.length >0?\n                <Alert>This is a generic alert.</Alert>:<div/>}\n                </SpaceBetween>\n            }\n            >\n                <Container>\n                    <img src={diagram} alt=\"Evaluation work flow\" width=\"80%\"></img>\n                    <Box variant=\"p\">\n                        The AWS Content Moderation Accuracy Evaluation tool helps you evaluate Amazon Rekognition image moderation's false-positive rate based on your own dataset. \n                        For best results, we recommend you use a dataset with 5,000+ images, as fewer images may lead to a skewed result and a biased conclusion. \n                        <p>To evaluate Content Moderation accuracy:</p>\n                        <ol>\n                        <li>Initiate a new task and upload your dataset to the Amazon provided S3 bucket folder.</li>\n                        <li>Start the moderation task once all the images are in place. Rekognition will then start to moderate images one by one.</li>\n                        <li>Rekognition will label some of your images as inappropriate. You then can review these images using A2I to provide human input: if the image truly has inappropriate information (true-positive) or not (false-positive).</li>\n                        <li>The tool will combine Rekognition moderation results and human inputs to produce an accuracy report.</li>\n                        </ol>\n                    </Box>\n                </Container>\n                {/*\n                <Container width=\"150\">\n                <RadioGroup\n                    value={\"moderating\"}\n                    items={[\n                        { value: \"created\", label: \"Task created\", description: \"Initiated task. Waiting for user to upload images.\" },\n                        { value: \"image_ready\", label: \"Images uploaded to S3 bucket\", description: \"Images uploaded to the S3 bucket. Ready to start moderation.\" },\n                        { value: \"moderating\", label: \"Moderation in progress\", description: \"Rekognition moderating the images.\" },\n                        { value: \"moderated\", label: \"Moderation completes\", description: \"Rekognition has moderated all the images. Ready to start human review.\", disabled: true },\n                        { value: \"reviewing\", label: \"Human review in progress\", description: \"Human reviewing the images labeled by Rekognition.\" },\n                        { value: \"completed\", label: \"Completed\", description: \"The evaluation process completes.\" },\n                    ]}\n                    />\n                </Container>*/}\n            </ContentLayout>\n    );\n}\n\nexport {GetStarted};","import { useState, useRef } from \"react\";\nimport Header from \"@cloudscape-design/components/header\";\nimport * as React from \"react\";\nimport Alert from \"@cloudscape-design/components/alert\";\nimport {withAuthenticator} from \"@aws-amplify/ui-react\";\nimport \"@aws-amplify/ui-react/styles.css\";\nimport {Navigation, Notifications} from './components/commons/common-components';\nimport { AppLayout } from '@cloudscape-design/components';\nimport { TaskList } from \"./components/task-list\";\nimport TopNavigation from \"@cloudscape-design/components/top-navigation\";\nimport logo from './static/aws_logo.png'\nimport {GetStarted} from \"./components/get-started\";\nimport { BreadcrumbGroup, Link, SpaceBetween } from '@cloudscape-design/components';\n\nconst App = ({ signOut, user }) => {\n  const [currentPage, setCurrentPage] = useState(\"getstarted\");\n  const [navigationOpen, setNavigationOpen] = useState(true);\n  const [activeNavHref, setActiveNavHref] = useState(\"#/getstarted\");\n  const [currentBreadcrumb, setCurrentBreadcrumb] = useState([{ \"type\": 'label', \"text\": 'Home', \"href\": '#'}, {\"id\":\"getstarted\", \"text\": 'Get Started', \"href\": '#/getstarted', }]);\n  const appLayout = useRef();\n\n  const [selectedItems, setSelectedItems] = useState([]); \n\n  const handleItemClick = event => {\n    setSelectedItems([]);\n  }\n\n  const onSelectionChange = event => {\n    setSelectedItems(event.selectedItems);\n  }\n\n  const handleNavigationChange = () => {\n    setNavigationOpen(!navigationOpen);\n  }\n\n  const handleHavItemClick = e => {\n    setCurrentPage(e.detail.id);\n    setActiveNavHref(e.detail.href);\n    if (e.detail.id === \"getstarted\") {\n      setCurrentBreadcrumb([{ \"type\": 'label', \"text\": 'Home', \"href\": '#'}, {\"id\":\"dashboard\", \"text\": 'Dashboard', \"href\": '#/getstarted', }]);\n    }\n    else {\n      setCurrentBreadcrumb([{ \"type\": 'label', \"text\": 'Home', \"href\": '#'}, {\"id\":\"dashboard\", \"text\": 'Evaluation tasks', \"href\": '#/tasks', }]);\n    }\n    setCurrentPage(e.detail.id);\n  }\n\n  const handleStart = e => {\n    setCurrentPage(\"tasks\");\n  }\n\n    return (\n      <div>\n      <TopNavigation      \n      identity={{\n        href: \"#\",\n        title: \"AWS Content Moderation\",\n        logo: {\n          src: logo,\n          alt: \"AWS\"\n        }\n      }}\n      utilities={[\n        {\n          type: \"menu-dropdown\",\n          text: user.username,\n          description: user.email,\n          iconName: \"user-profile\",\n          onItemClick: signOut,\n          items: [\n            { type: \"button\", id: \"signout\", text: \"Sign out\"}\n          ]\n        }\n      ]}\n      i18nStrings={{\n        searchIconAriaLabel: \"Search\",\n        searchDismissIconAriaLabel: \"Close search\",\n        overflowMenuTriggerText: \"More\",\n        overflowMenuTitleText: \"All\",\n        overflowMenuBackIconAriaLabel: \"Back\",\n        overflowMenuDismissIconAriaLabel: \"Close menu\"\n      }}\n    />\n      <AppLayout\n      headerSelector=\"#header\"\n      ref={appLayout}\n      contentType=\"table\"\n      navigationOpen={navigationOpen}\n      onNavigationChange={handleNavigationChange}\n      navigation={\n      <Navigation \n        onFollowHandler={handleHavItemClick}\n        selectedItems={[\"getstarted\"]}\n        activeHref={activeNavHref}\n        items={\n        [\n          { type: 'link', id:\"getstarted\", text: 'Get Started', \"href\": '#/getstarted', },\n          { type: 'link', id:\"tasks\", text: 'Evaluation Tasks', \"href\": '#/tasks', },\n          { type: 'divider' },\n          {\n            type: 'link', text: 'Documentation', external: true, href: '#/documentation',\n          },\n        ]\n      } \n      />}\n      breadcrumbs={\n        <BreadcrumbGroup \n          items={currentBreadcrumb}\n        />\n      }\n      header={\n        <SpaceBetween size=\"l\">\n          <Header\n            variant=\"h1\"\n            info={<Link>Info</Link>}\n            description=\"AWS AI Content Moderation - Rekognition Accuracy Evaluation.\"\n          >\n            AWS Content Moderation\n          </Header>\n\n          { alert !== null && alert.length > 0?<Alert>{alert}</Alert>:<div/>}\n        </SpaceBetween>\n      }\n      content={\n        currentPage === \"tasks\"?< TaskList user={user} onItemClick={handleItemClick} onSelectionChange={onSelectionChange}/>:<GetStarted onStart={handleStart} />\n      }\n    >\n    </AppLayout>\n    </div>\n  );\n}\nexport default withAuthenticator(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Amplify } from 'aws-amplify';\nimport config from './aws-exports';\n//Amplify.configure(config);\n\nAmplify.configure({\n  // OPTIONAL - if your API requires authentication \n  Auth: {\n    /*\n      identityPoolId: config.aws_cognito_identity_pool_id, // REQUIRED - Amazon Cognito Identity Pool ID\n      region: config.aws_project_region, // REQUIRED - Amazon Cognito Region\n      userPoolId: config.aws_user_pools_id, // OPTIONAL - Amazon Cognito User Pool ID\n      userPoolWebClientId: config.aws_user_pools_web_client_id, // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n      */\n      identityPoolId: \"[[[COGNITO_IDENTITY_POOL_ID]]]\",\n      region: \"[[[COGNITO_REGION]]]\",\n      userPoolId: \"[[[COGNITO_USER_POOL_ID]]]\",\n      userPoolWebClientId: \"[[[COGNITO_USER_POOL_CLIENT_ID]]]\",\n      \n  },\n  API: {\n      endpoints: [\n          {\n              name: \"CmAccuracyEvalSrv\",\n              //endpoint: \"https://vgapm1vmwh.execute-api.us-east-1.amazonaws.com/staging/v1\"\n              endpoint: \"[[[APIGATEWAY_BASE_URL]]]\"\n          }\n      ]\n  }\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}